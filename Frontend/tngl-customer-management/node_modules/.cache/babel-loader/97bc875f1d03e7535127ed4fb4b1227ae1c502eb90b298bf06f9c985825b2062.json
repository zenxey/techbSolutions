{"ast":null,"code":"var _jsxFileName = \"F:\\\\Code Practices\\\\Company Task Projects\\\\techb\\\\Frontend\\\\tngl-customer-management\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api/customers';\nconst Dashboard = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    customerNumber: '',\n    meterSerialNumber: ''\n  });\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    try {\n      const response = await axios.get(API_URL);\n      setCustomers(response.data);\n    } catch (error) {\n      console.error('Error fetching customers:', error.message);\n    }\n  };\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(API_URL, formData);\n      setFormData({\n        name: '',\n        address: '',\n        customerNumber: '',\n        meterSerialNumber: ''\n      });\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error creating customer:', error.message);\n    }\n  };\n  const handleUpdate = async id => {\n    try {\n      // Implement the update logic as needed\n      console.log('Update customer with ID:', id);\n    } catch (error) {\n      console.error('Error updating customer:', error.message);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`${API_URL}/${id}`);\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error deleting customer:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TNGL Customer Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customer List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [customer.name, \" - \", customer.customerNumber, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(customer._id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(customer._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, customer._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"a23trSsmcVrTzv5vxZgQEh0HaZ0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","Dashboard","_s","customers","setCustomers","formData","setFormData","name","address","customerNumber","meterSerialNumber","fetchCustomers","response","get","data","error","console","message","handleInputChange","e","target","value","handleSubmit","preventDefault","post","handleUpdate","id","log","handleDelete","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","map","customer","onClick","_id","_c","$RefreshReg$"],"sources":["F:/Code Practices/Company Task Projects/techb/Frontend/tngl-customer-management/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/customers';\r\n\r\nconst Dashboard = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    address: '',\r\n    customerNumber: '',\r\n    meterSerialNumber: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      setCustomers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(API_URL, formData);\r\n      setFormData({ name: '', address: '', customerNumber: '', meterSerialNumber: '' });\r\n      fetchCustomers();\r\n    } catch (error) {\r\n      console.error('Error creating customer:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (id) => {\r\n    try {\r\n      // Implement the update logic as needed\r\n      console.log('Update customer with ID:', id);\r\n    } catch (error) {\r\n      console.error('Error updating customer:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`);\r\n      fetchCustomers();\r\n    } catch (error) {\r\n      console.error('Error deleting customer:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>TNGL Customer Management</h1>\r\n\r\n      {/* Customer Form */}\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form fields go here */}\r\n        <button type=\"submit\">Add Customer</button>\r\n      </form>\r\n\r\n      {/* Customer List */}\r\n      <h2>Customer List</h2>\r\n      <ul>\r\n        {customers.map((customer) => (\r\n          <li key={customer._id}>\r\n            {customer.name} - {customer.customerNumber}{' '}\r\n            <button onClick={() => handleUpdate(customer._id)}>Update</button>\r\n            <button onClick={() => handleDelete(customer._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}